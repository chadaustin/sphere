#include "Audio.hpp"


static int s_InitCount = 0;
static audiere::AudioDevicePtr s_Device;


////////////////////////////////////////////////////////////////////////////////

static void InitializeAudio()
{
  if (s_InitCount++ == 0) {
    s_Device = audiere::OpenDevice();
    if (!s_Device) {
      s_Device = audiere::OpenDevice("null");
    }
  }
}

////////////////////////////////////////////////////////////////////////////////

static void CloseAudio()
{
  if (--s_InitCount == 0) {
    s_Device = 0;
  }
}

////////////////////////////////////////////////////////////////////////////////

CSound::CSound()
: m_Sound(NULL)
{
  InitializeAudio();
}

////////////////////////////////////////////////////////////////////////////////

CSound::~CSound()
{
  CloseAudio();
}

////////////////////////////////////////////////////////////////////////////////

bool
CSound::Load(const char* filename)
{
  m_Sound = audiere::OpenSound(s_Device.get(), filename);
  return bool(m_Sound);
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::Play()
{
  if (m_Sound) {
    m_Sound->play();
  }
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::Stop()
{
  if (m_Sound) {
    m_Sound->stop();
    m_Sound->reset();
  }
}

////////////////////////////////////////////////////////////////////////////////

int
CSound::GetVolume()
{
  if (m_Sound) {
    return m_Sound->getVolume() * 255;
  } else {
    return 0;
  }
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::SetVolume(int Volume)
{
  if (m_Sound) {
    m_Sound->setVolume(Volume / 255.0f);
  }
}

////////////////////////////////////////////////////////////////////////////////

bool
CSound::IsPlaying() const
{
  if (m_Sound) {
    return m_Sound->isPlaying();
  } else {
    return false;
  }
}

////////////////////////////////////////////////////////////////////////////////
