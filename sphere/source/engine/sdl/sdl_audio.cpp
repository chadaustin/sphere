#include "sdl_audio.hpp"


static audiere::AudioDevicePtr s_AudioDevice;


////////////////////////////////////////////////////////////////////////////////

bool InitAudio()
{
  s_AudioDevice = audiere::OpenDevice();
  if (!s_AudioDevice) {
    s_AudioDevice = audiere::OpenDevice("null");
  }
  return bool(s_AudioDevice);
}

////////////////////////////////////////////////////////////////////////////////

void CloseAudio()
{
  s_AudioDevice = 0;
}

////////////////////////////////////////////////////////////////////////////////

audiere::AudioDevice* SA_GetAudioDevice()
{
  return s_AudioDevice.get();
}

////////////////////////////////////////////////////////////////////////////////

audiere::OutputStream* SA_OpenSound(audiere::File* file, bool streaming)
{
  return audiere::OpenSound(s_AudioDevice.get(), file, streaming);
}

////////////////////////////////////////////////////////////////////////////////


/*

#include "sdl_internal.hpp"
#include "sdl_audio.hpp"


struct SA_SOUNDimp 
{
  void* reserved;
};

static void* filesystem_pointer;

////////////////////////////////////////////////////////////////////////////////

bool InitAudio()
{
  return true;
}

////////////////////////////////////////////////////////////////////////////////

bool CloseAudio()
{
  return true;
}

////////////////////////////////////////////////////////////////////////////////

void SA_SetPrivate(void* data)
{
  filesystem_pointer = data;
}

////////////////////////////////////////////////////////////////////////////////

void* SA_GetPrivate()
{
  return filesystem_pointer;
}

////////////////////////////////////////////////////////////////////////////////

void SA_SetFileCallbacks(
  SA_FileOpenCallback  open,
  SA_FileCloseCallback close,
  SA_FileReadCallback  read,
  SA_FileSeekCallback  seek,
  SA_FileTellCallback  tell,
  SA_FileSizeCallback  size)
{
}

////////////////////////////////////////////////////////////////////////////////

SA_SOUND SA_LoadSound(const char* filename)
{
  SA_SOUND s = new SA_SOUNDimp;

  return s;
}

////////////////////////////////////////////////////////////////////////////////

void SA_DestroySound(SA_SOUND sound)
{
  delete sound;
}

////////////////////////////////////////////////////////////////////////////////

void SA_PlaySound(SA_SOUND sound, bool repeat)
{
}

////////////////////////////////////////////////////////////////////////////////

void SA_StopSound(SA_SOUND sound)
{
}

////////////////////////////////////////////////////////////////////////////////

void SA_SetVolume(SA_SOUND sound, int volume)
{
}

////////////////////////////////////////////////////////////////////////////////

int SA_GetVolume(SA_SOUND sound)
{
  return 0;
}

////////////////////////////////////////////////////////////////////////////////

int SA_GetLength(SA_SOUND sound)
{
  return 0;
}

////////////////////////////////////////////////////////////////////////////////

void SA_SetPosition(SA_SOUND sound, int position)
{
}

////////////////////////////////////////////////////////////////////////////////

int SA_GetPosition(SA_SOUND sound)
{
  return 0;
}

////////////////////////////////////////////////////////////////////////////////

int SA_IsPlaying(SA_SOUND sound)
{
  return 0;
}

////////////////////////////////////////////////////////////////////////////////

*/