#include <stdio.h>
#include <audiere.h>
#include "Configuration.hpp"
#include "Keys.hpp"
#include "Audio.hpp"


static ADR_CONTEXT s_Context;


////////////////////////////////////////////////////////////////////////////////

bool InitializeAudio()
{
  s_Context = AdrCreateContext(NULL);
  return (s_Context != NULL);
}

////////////////////////////////////////////////////////////////////////////////

void CloseAudio()
{
  AdrDestroyContext(s_Context);
  s_Context = NULL;
}

////////////////////////////////////////////////////////////////////////////////

CSound::CSound()
: m_Sound(NULL)
{
}

////////////////////////////////////////////////////////////////////////////////

CSound::~CSound()
{
  if (m_Sound) {
    AdrCloseStream(m_Sound);
    m_Sound = NULL;
  }
}

////////////////////////////////////////////////////////////////////////////////

bool
CSound::Load(const char* filename)
{
  if (m_Sound) {
    AdrCloseStream(m_Sound);
    m_Sound = NULL;
  }

  m_Sound = AdrOpenStream(s_Context, filename);
  return (m_Sound != NULL);
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::Play()
{
  AdrPlayStream(m_Sound);
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::Stop()
{
  AdrPauseStream(m_Sound);
  AdrResetStream(m_Sound);
}

////////////////////////////////////////////////////////////////////////////////

int
CSound::GetVolume()
{
  return AdrGetStreamVolume(m_Sound);
}

////////////////////////////////////////////////////////////////////////////////

void
CSound::SetVolume(int Volume)
{
  AdrSetStreamVolume(m_Sound, Volume);
}

////////////////////////////////////////////////////////////////////////////////

bool
CSound::IsPlaying() const
{
  if (m_Sound) {
    return (AdrIsStreamPlaying(m_Sound) == ADR_TRUE);
  } else {
    return false;
  }
}

////////////////////////////////////////////////////////////////////////////////
