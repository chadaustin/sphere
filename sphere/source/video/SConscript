import os
import types

Import('base_env BUILD_DIR COMPILER')

env = base_env.Copy()
env.Append(LIBPATH = Dir('common'))

def VideoDriver(name, source, resource, libs):
    global env
    drv = env.Copy()
    COMPILER.SetupWin32(drv)
    drv.Append(LIBS = libs)
    if resource:
        if type(source) is not types.ListType:
            source = [source]
        source.append(drv.RES(resource + '.res', resource + '.rc'))
        source.append('../common/video.def')
    drv.Install(os.path.join(BUILD_DIR, 'system/video'),
                drv.SharedLibrary(name, source))


Export('VideoDriver')

SConscript(dirs = [
    'common',
    'greyscale',
    'interpolate16',
    'interpolate32',
    'sphere_gl',
    'standard8',
    'standard16',
    'standard32'])
