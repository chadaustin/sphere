{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif;}
{\f17\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f18\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f19\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}
{\f20\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f21\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f22\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f23\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f24\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f25\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}
{\f26\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f27\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f28\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}
{\f29\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f30\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Bookshelf Symbol 3;}{\f31\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}
{\f32\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic;}{\f33\fswiss\fcharset0\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f34\fdecor\fcharset0\fprq2{\*\panose 04020404030d07020202}Tempus Sans ITC;}
{\f35\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f36\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Attica IAGB2 Symbol;}{\f37\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G1;}
{\f38\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f39\fswiss\fcharset0\fprq2{\*\panose 020b0807020203060204}BankGothic Md BT;}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f41\fswiss\fcharset0\fprq2{\*\panose 020b0602030504090204}Lucida Sans;}{\f42\fdecor\fcharset0\fprq2{\*\panose 04040403030d02020704}Matisse ITC;}{\f43\froman\fcharset0\fprq2{\*\panose 00050102010706020507}Map Symbols;}
{\f44\fmodern\fcharset0\fprq1{\*\panose 00000009000000000000}PJ Hiragana;}{\f45\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Kata;}{\f46\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}
{\f47\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f48\fmodern\fcharset0\fprq1{\*\panose 02010509020102010303}OCR A Extended;}{\f49\fdecor\fcharset0\fprq2{\*\panose 04040506030f02020702}Westminster;}
{\f50\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f51\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Dracula;}{\f52\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}
{\f53\fmodern\fcharset0\fprq1{\*\panose 020b0509000000000004}Andale Mono;}{\f54\fscript\fcharset0\fprq2{\*\panose 03020702040402020504}Marigold;}{\f55\fscript\fcharset238\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}
{\f56\fscript\fcharset238\fprq2{\*\panose 03030502040406070605}Coronet;}{\f57\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f58\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}
{\f59\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f60\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f61\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}
{\f62\fmodern\fcharset0\fprq1{\*\panose 00000009000000000000}PJ Katakana;}{\f63\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Hiragana;}{\f64\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}
{\f65\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G2;}{\f66\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}vb01;}{\f67\fdecor\fcharset0\fprq2{\*\panose 04040604020b02020304}LcdD;}
{\f68\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f69\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f70\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G1;}
{\f71\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G2;}{\f72\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G1;}
{\f73\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G2;}{\f74\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Oasis;}{\f75\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}
{\f76\froman\fcharset0\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f77\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f78\fscript\fcharset0\fprq2{\*\panose 03070502060502030205}Papyrus;}
{\f79\froman\fcharset0\fprq2{\*\panose 02080502050505020702}Poor Richard;}{\f80\fscript\fcharset0\fprq2{\*\panose 03070502030502020203}Viner Hand ITC;}{\f81\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Hydrogen;}
{\f172\fswiss\fcharset238\fprq2 Tahoma CE;}{\f173\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f175\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f176\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f177\fswiss\fcharset186\fprq2 Tahoma Baltic;}
{\f190\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f191\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f193\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f194\fmodern\fcharset162\fprq1 Lucida Console Tur;}
{\f196\fswiss\fcharset238\fprq2 Arial Black CE;}{\f197\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f199\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f200\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f201\fswiss\fcharset186\fprq2 Arial Black Baltic;}
{\f208\fswiss\fcharset238\fprq2 Impact CE;}{\f209\fswiss\fcharset204\fprq2 Impact Cyr;}{\f211\fswiss\fcharset161\fprq2 Impact Greek;}{\f212\fswiss\fcharset162\fprq2 Impact Tur;}{\f213\fswiss\fcharset186\fprq2 Impact Baltic;}
{\f214\fswiss\fcharset238\fprq2 Verdana CE;}{\f215\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f217\fswiss\fcharset161\fprq2 Verdana Greek;}{\f218\fswiss\fcharset162\fprq2 Verdana Tur;}{\f219\fswiss\fcharset186\fprq2 Verdana Baltic;}
{\f226\fswiss\fcharset238\fprq2 Haettenschweiler CE;}{\f227\fswiss\fcharset204\fprq2 Haettenschweiler Cyr;}{\f229\fswiss\fcharset161\fprq2 Haettenschweiler Greek;}{\f230\fswiss\fcharset162\fprq2 Haettenschweiler Tur;}
{\f231\fswiss\fcharset186\fprq2 Haettenschweiler Baltic;}{\f232\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f233\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f235\fswiss\fcharset161\fprq2 Arial Narrow Greek;}
{\f236\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f237\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f238\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f239\froman\fcharset204\fprq2 Bookman Old Style Cyr;}
{\f241\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f242\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f243\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f250\froman\fcharset238\fprq2 Garamond CE;}
{\f251\froman\fcharset204\fprq2 Garamond Cyr;}{\f253\froman\fcharset161\fprq2 Garamond Greek;}{\f254\froman\fcharset162\fprq2 Garamond Tur;}{\f255\froman\fcharset186\fprq2 Garamond Baltic;}{\f320\fswiss\fcharset162\fprq2 BankGothic Md BT Tur;}
{\f322\fswiss\fcharset238\fprq2 Century Gothic CE;}{\f323\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f325\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f326\fswiss\fcharset162\fprq2 Century Gothic Tur;}
{\f327\fswiss\fcharset186\fprq2 Century Gothic Baltic;}{\f364\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f365\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f367\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}
{\f368\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f382\froman\fcharset238\fprq2 Georgia CE;}{\f383\froman\fcharset204\fprq2 Georgia Cyr;}{\f385\froman\fcharset161\fprq2 Georgia Greek;}{\f386\froman\fcharset162\fprq2 Georgia Tur;}
{\f387\froman\fcharset186\fprq2 Georgia Baltic;}{\f394\fswiss\fcharset238\fprq2 Trebuchet MS CE;}{\f398\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f400\fmodern\fcharset238\fprq1 Andale Mono CE;}{\f401\fmodern\fcharset204\fprq1 Andale Mono Cyr;}
{\f403\fmodern\fcharset161\fprq1 Andale Mono Greek;}{\f404\fmodern\fcharset162\fprq1 Andale Mono Tur;}{\f405\fmodern\fcharset186\fprq1 Andale Mono Baltic;}{\f406\fscript\fcharset238\fprq2 Marigold CE;}{\f410\fscript\fcharset162\fprq2 Marigold Tur;}
{\f436\froman\fcharset238\fprq2 Book Antiqua CE;}{\f437\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f439\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f440\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f441\froman\fcharset186\fprq2 Book Antiqua Baltic;}
{\f488\fdecor\fcharset162\fprq2 LcdD Tur;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;
\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\lang2057\cgrid \snext0 Normal;}{\*\cs10 \additive 
Default Paragraph Font;}}{\*\revtbl {Unknown;}}{\info{\author Brian Robb}{\operator Brian Robb}{\creatim\yr2003\mo2\dy24\hr20\min51}{\revtim\yr2003\mo2\dy24\hr20\min58}{\version2}{\edmins7}{\nofpages21}{\nofwords5149}{\nofchars29350}{\nofcharsws36043}{\vern89}}
\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind4\viewscale75 \fet0\sectd \linex0\headery709\footery709\colsx709\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\ri-1800\nowidctlpar\adjustright \fs20\lang2057\cgrid {\f16\ul\cf6\cgrid0 Wild-Tiger's sphere tutorial!}{\f16\cf6\cgrid0        ---    email me at  }{\f16\cf2\cgrid0 wildtiger670@hotmail.com}{\f16\cf6\cgrid0   for more information.
\par Thanks to GoddessLaura for helping me change mistakes throughout this tutorial.
\par 
\par }{\b\f16\cf6\cgrid0 Before I start, I recommend opening this in WordPad, because that's what I wrote it in!
\par              -- Or else it }{\b\f16\ul\cf6\cgrid0 may}{\b\f16\cf6\cgrid0  look screwy --}{\f16\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf11\cgrid0 
\par }{\b\f16\cf6\cgrid0 Please tell me what you think of this tutorial by emailing me at the adress above.}{\b\f16\cf5\cgrid0 
\par }{\b\f16\cf6\cgrid0 I just wanna know what you guys think of it. :) Tell me if it's helpful or not. Thankyou.
\par }{\f16\cf5\cgrid0 
\par }{\f16\cf6\cgrid0 http://a-extreme.homeip.net/downloads/  You can find this tutorial, my game in progress (with Neko-San's help) and whatever little things I put there. Also visit http://www.a-extreme.tk/ if you want, that's my site.}{\f16\cgrid0 
\par 
\par So you want to learn Sphere? Do you know how to actually }{\b\f16\cgrid0 use}{\f16\cgrid0  the program but want to script something? Read on!
\par }{\b\f16\cgrid0 
\par First of all, let's start with the basics. I know you probably just want to skip this, but it's really good for you to know if yo
u seriously want to use Sphere. Even if you have some knowledge of Javascript you may need to read it. Please bare with it, it'll help you in the end.
\par 
\par Also...this tutorial will be long, and I\rquote m making it long so I can feed a lot of information to you. Try
ing to make sphere easier for you :) You should probably go over something a couple of times if you don't understand it, and if you still can't understand something you can visit the }{\f16\cf6\cgrid0 #sphere}{\b\f16\cgrid0  channel on IRC at: }{
\f16\cf6\cgrid0 irc.esper.net}{\b\f16\cgrid0  port: }{\f16\cf6\cgrid0 6667}{\b\f16\cgrid0 .
\par If I\rquote m there (I\rquote m Wild-Tiger) I\rquote ll help you, and if I can't or I\rquote m not there ask someone else that's there. :)
\par }{\f16\cgrid0 
\par Okay, first thing's first, let's create ourselves a project! File | New | Project shall get you there. Just type in a name, anything at the moment. You can change it later (I like to use the same name in both the project title and the game title).
\par 
\par Okay, now goto File | New | Script and up shall pop up a script with absolutely nothing in it! Woohoo! Let's make it do something. Okay, to begin with, }{\b\f16\cgrid0 save}{\f16\cgrid0  }{\b\f16\cgrid0 the new script}{\f16\cgrid0 
 as "Game.js" in the scripts folder of your game. Now we need to go to the project page (It'll have the name Project [name] up the top of it and list the different folders (Maps, Spritesets etc.). Double click Game Settings. Now in main script choose "Gam
e.js". Click okay. This is the }{\b\f16\cgrid0 starting}{\f16\cgrid0  script that will run when you press the execute button. 
\par 
\par Now, when you start a game, you }{\b\f16\cgrid0 need }{\f16\cgrid0 to have a starting function, or else it won't know what to do!
\par Write this in:
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cgrid0  game}{\f16\cf5\cgrid0 ()
\par \{
\par   }{\f16\cf11\cgrid0 // Script goes here.}{\f16\cf5\cgrid0 
\par \}
\par 
\par }{\f16\cf1\cgrid0 What will this do? No terribly much. game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0  is the start of }{\b\f16\cf1\cgrid0 every }{\f16\cf1\cgrid0 sphere program. }{\b\f16\cf1\cgrid0 You can only have one of these in your whole game. }{
\f16\cf1\cgrid0 You place whatever you want to happen inside }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0  and }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 . Okay, let's make it say "Hello world?" Replace the above with this:
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 GetSystemFont}{\f16\cf5\cgrid0 ();  }{\f16\cf11\cgrid0 // variable name_of_variable = what_it_equals;}{\f16\cf2\cgrid0 
\par 
\par function }{\f16\cf1\cgrid0 game}{\f16\cf5\cgrid0 ()}{\f16\cf2\cgrid0 
\par }{\f16\cf5\cgrid0 \{   }{\f16\cf2\cgrid0 
\par }{\f16\cf1\cgrid0   main_font.drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 );  }{\f16\cf11\cgrid0 
// Draw Text}{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();  }{\f16\cf11\cgrid0 // You HAVE to FlipScreen to get anything to appear on the screen!!!}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 (); }{\f16\cf11\cgrid0 // Waits until you press a key (Any key) }{\f16\cf2\cgrid0 
\par }{\f16\cf5\cgrid0 \}
\par 
\par }{\f16\cf1\cgrid0 To run the program, either press }{\b\f16\cf1\cgrid0 CTRL + F5 }{\f16\cf1\cgrid0 or, click the}{\b\f16\cf1\cgrid0  little lightning icon}{\f16\cf1\cgrid0 .}{\f16\cf5\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 GetSystemFont() : }{\f16\cf1\cgrid0 This is the system's default font. If you'd like the change it just use LoadFont ("name.rfn"); name.rfn being the name of your font's name.}{\f16\cf5\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 drawText :}{\f16\cf1\cgrid0  main_font.drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 ); 
}{\f16\cf1\cgrid0  means GetSystemFont().drawText(x, y, string_or_value);
\par Don't try using that by the way, as it won't work. X and Y has to equal a number, and string_or_value has to be just as the name says, unless of course any of those three have been defined somewhere.}{\cgrid0 
\par }{\f16\cf1\cgrid0 
\par }{\f16\cf6\cgrid0 FlipScreen() : }{\f16\cf1\cgrid0 This }{\b\f16\cf1\cgrid0 has}{\f16\cf1\cgrid0  to be used to draw the text, images and such. The text will not appear if you don't.
\par }{\f16\cf5\cgrid0 
\par }{\f16\cf6\cgrid0 GetKey() : }{\f16\cf1\cgrid0 Waits until any key is pressed.
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------}{\f16\cf5\cgrid0 
\par 
\par }{\f16\cf1\cgrid0 Just incase you don't know, anything with}{\f16\cf11\cgrid0   //}{\f16\cf1\cgrid0   is a comment, which means that the engine cannot see it at all.
\par A comment can also be used across multiple lines, like so:
\par 
\par }{\f16\cf2\cgrid0 function }{\f16\cf1\cgrid0 game}{\f16\cf5\cgrid0 ()}{\f16\cf2\cgrid0 
\par }{\f16\cf5\cgrid0 \{
\par  }{\f16\cf11\cgrid0 /*
\par   main_font.drawText (0, 0, "Hello world!");
\par   FlipScreen();
\par   GetKey();
\par */ }{\f16\cf5\cgrid0                        
\par 
\par }{\f16\cf11\cgrid0 /*
\par   Text can also be written here, and you don't have to worry about
\par   the engine caring, because when it's in a comment
\par   it completely disregards it!
\par */}{\f16\cf5\cgrid0                                             }{\f16\cf2\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf6\cgrid0 
\par                  *** This would run, but close as there's no text to the screen. If you added something that's }{\b\f16\cf6\cgrid0 not}{\f16\cf6\cgrid0  in the comment brackets, that would run. ***
\par }{\f16\cf1\cgrid0 
\par Comments tell you or someone reading your code what it does, or even use it to block out pieces of code to see if something works or not.
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Now, variables (like the one above) can be used in different ways.
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 name_of_variable}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 what_the_variable_changes_to}{\f16\cf5\cgrid0 ;
\par 
\par }{\f16\cf1\cgrid0 It could be...
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 how_many_items}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 0}{\f16\cf5\cgrid0 ;  }{\f16\cf11\cgrid0 // This would cause variable how_many_items to equal to 0.
\par 
\par }{\f16\cf6\cgrid0 or}{\f16\cf11\cgrid0 
\par }{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 hello}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 ;  }{\f16\cf11\cgrid0 // This would cause variable hello to equal the string "Hello world!"
\par 
\par }{\f16\cf6\cgrid0 or
\par }{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 GetSystemFont}{\f16\cf5\cgrid0 (); }{\f16\cf11\cgrid0 
 // This will get the system font, and they can be used in front of .drawText.
\par 
\par }{\f16\cf6\cgrid0 *****}{\f16\cf11\cgrid0 
\par 
\par }{\f16\cf1\cgrid0 To use these in the above game() function, edit:
\par 
\par  main_font.drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 );
\par 
\par }{\f16\cf6\cgrid0 to}{\f16\cf1\cgrid0 
\par 
\par main_font.drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  hello}{\f16\cf5\cgrid0 );
\par 
\par }{\f16\cf1\cgrid0 See how it says everything that is in the "hello" variable? If you changed hello to how_many_items, it'd show 0 on the screen.
\par Variables are used to store values and strings.
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 hello}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 =}{\f16\cf2\cgrid0  }{\f16\cf11\cgrid0 "Hello how are you today?"}{\f16\cf5\cgrid0 ;
\par }{\f16\cf1\cgrid0 Can be used over and over, without having to write "Hello how are you today?"  over and over again.
\par 
\par }{\f16\cf6\cgrid0 By the way, you should keep in mind; }{\b\f16\cf6\cgrid0 a variable\rquote s name must be original each time.}{\f16\cf6\cgrid0 
\par }{\f16\cf1\cgrid0 
\par Variables are case sensitive. Hello and hello would be completely different variable names.
\par 
\par You }{\b\f16\cf1\cgrid0 can}{\f16\cf1\cgrid0  update a variable with the same name however:
\par 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  hello }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function }{\f16\cf1\cgrid0 game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{
\par   }{\f16\cf1\cgrid0 hello }{\f16\cf5\cgrid0 = }{\f16\cf11\cgrid0 "Hello world...has changed!"}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ,}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0 , hello}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0      }{\f16\cf11\cgrid0 
// Instead of hello being "Hello world" it'll be the changed version.}{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();  }{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Hrm, I just remembered. What if you want to add things on the same line? A string of text plus a variable...or many strings and variables? Easy, just use the }{\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  sign.
\par 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  hello }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 ;
\par 
\par }{\f16\cf2\cgrid0 function }{\f16\cf1\cgrid0 game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{
\par   }{\f16\cf1\cgrid0 hello }{\f16\cf5\cgrid0 = }{\f16\cf11\cgrid0 "Hello world...has changed!"}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ,}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0 , hello }{\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 " "}{\f16\cf1\cgrid0  }{
\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world...again!"}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();  }{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par That }{\f16\cf11\cgrid0 " "}{\f16\cf1\cgrid0  with nothing in it would just make a space, or otherwise it'd come out as }{\f16\cf11\cgrid0 "Hello world!Hello world...again!"}{\f16\cf1\cgrid0 .
\par 
\par If you had the variables ready, you could do things like: 
\par 
\par main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ,}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0 , var_1 }{\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  var_2 }{\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  var_3 }{
\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 " "}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 +}{\f16\cf1\cgrid0  var_4}{\f16\cf5\cgrid0 );
\par 
\par }{\f16\cf1\cgrid0 That'd come out different, depending on what the variables are. Just make sure it has a space in the strings that have no }{\f16\cf11\cgrid0 " "}{\f16\cf1\cgrid0  after it, like }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  var_1 }{
\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello! "}{\f16\cf1\cgrid0 
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par One thing can stop the use of a variable though. If it's in a function, it can }{\b\f16\cf1\cgrid0 ONLY}{\f16\cf1\cgrid0  be used in that function (unless you had prototypes, I\rquote ll get to that later)
\par 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  a }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "A"}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 function }{\f16\cf1\cgrid0 game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 , }{\f16\cf13\cgrid0 0}{\f16\cf1\cgrid0 , a}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0      }{\f16\cf11\cgrid0 // This will work!}{\f16\cf1\cgrid0 

\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();  }{\f16\cf1\cgrid0 
\par   
\par }\pard \ri-270\nowidctlpar\adjustright {\f16\cf1\cgrid0   }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  b }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "B"}{\f16\cf5\cgrid0 ;    }{\f16\cf11\cgrid0 //  This is in }{\b\f16\cf11\cgrid0 another }{
\f16\cf11\cgrid0 function, so it won't work in Goto_B, as it's }{\b\f16\cf11\cgrid0 not}{\f16\cf11\cgrid0  }{\b\f16\cf11\cgrid0 a}{\f16\cf11\cgrid0  }{\b\f16\cf11\cgrid0 global }{\f16\cf11\cgrid0 variable.}{\f16\cf1\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf1\cgrid0   Goto_B}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}
\par }{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  Goto_B }{\f16\cf5\cgrid0 ()
\par \{
\par   }{\f16\cf1\cgrid0 main_font.drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 , }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 , }{\f16\cf1\cgrid0 a}{\f16\cf5\cgrid0 );   }{\f16\cf11\cgrid0 // This will work, seeing }{\b\f16\cf11\cgrid0 
the a variable is a global}{\f16\cf11\cgrid0 .}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf1\cgrid0 , }{\f16\cf13\cgrid0 20}{\f16\cf1\cgrid0 , b}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0      }{\f16\cf11\cgrid0 // This won't work, }{
\b\f16\cf11\cgrid0 b is}{\f16\cf11\cgrid0  }{\b\f16\cf11\cgrid0 not defined}{\f16\cf11\cgrid0 !
\par }{\f16\cf1\cgrid0   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();  }{\f16\cf1\cgrid0   
\par }{\f16\cf5\cgrid0 \}
\par 
\par }{\f16\cf1\cgrid0 A global variable is a variable that can be used anywhere, and updated anywhere no matter where it's being updated.
\par It could be in a function, it could be out in the middle of nowhere. To make a global variable, just put it out in the open, above everything else. See }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  main_font and }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 
a  above? Those could be changed anywhere.
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par That brings me to functions!
\par 
\par See the above one? That's how you make one, I\rquote m sure you can figure it out, it's just like game...just an original name. To call it would just be:
\par 
\par    Goto_B}{\f16\cf5\cgrid0 ();
\par 
\par }{\f16\cf6\cgrid0 Keep in mind, just like variables, functions must have original names, and just like variables, they are case sensitive.}{\f16\cf1\cgrid0 
\par 
\par Now, a trickier one would be one with arguments. Eg,   
\par 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   Text }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello world!"}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 
// This will place "Hello world" at 0,0 on the screen, using the Text() function below.
\par   }{\f16\cf1\cgrid0 Text }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0 , }{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0 , }{\f16\cf11\cgrid0 "Hello world, again!!"}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 
// This would place "Hello world, again!!" on the screen, after pressing a key after the first.}{\f16\cf1\cgrid0 \line }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf5\cgrid0  }{\f16\cf1\cgrid0 Text }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 x}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 , }{\f16\cf1\cgrid0 what_to_write}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 x}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  what_to_write}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 Another example:}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   Draw_Image }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 , }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Bob.png"}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 
 // Draw's image "Bob.png" at point x, y.
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  Draw_Image }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 x}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  image}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  cur_image }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  LoadImage}{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 image}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 
/* LoadImage (image) is basically what it sounds like. It 
\par                                                                     loads the image.*/
\par }{\f16\cf1\cgrid0   cur_image}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 blit }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 x}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0        }{\f16\cf11\cgrid0 // This will draw the image at point x, y.}
{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0  
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 It can be a variable as well.}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par var Hello = function}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 , }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 "Hello!"}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }\pard \nowidctlpar\tx3825\adjustright {\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf1\cgrid0   Hello}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Hrm, let's talk about operators. 
\par 
\par Okay, example.  
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 = }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par x }{\f16\cf5\cgrid0 = }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 +}{\f16\cf2\cgrid0  }{\f16\cf13\cgrid0 1}{\f16\cf5\cgrid0 ;  }{\f16\cf11\cgrid0 // This would return x = 10 + 1, so x = 11;
\par }{\f16\cf6\cgrid0 An easy shortcut:
\par }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 += }{\f16\cf13\cgrid0 1}{\f16\cf5\cgrid0 ;}{\f16\cf6\cgrid0 
\par And to just add by 1 could also be said as:
\par }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 ++;
\par }{\f16\cf6\cgrid0 The same could be used with minus.}{\f16\cf1\cgrid0 
\par x }{\f16\cf5\cgrid0 -=}{\f16\cf1\cgrid0  1}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par x }{\f16\cf5\cgrid0 --;
\par 
\par }{\f16\cf6\cgrid0 Just use it in a function like this:}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 90}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  x}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 
// Before is increased by 100.}{\f16\cf1\cgrid0 
\par   x }{\f16\cf5\cgrid0 +=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 100}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0      }{\f16\cf11\cgrid0 // x now equals 190.
\par }{\f16\cf1\cgrid0   main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  x}{\f16\cf5\cgrid0 );}{\f16\cf1\cgrid0   }{
\f16\cf11\cgrid0 // After it is increased by 100.}{\f16\cf1\cgrid0 
\par   FlipScreen}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par   GetKey}{\f16\cf5\cgrid0 ();}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}
\par 
\par }{\f16\cf6\cgrid0 Basically it all works the same:}{\f16\cf1\cgrid0 
\par x }{\f16\cf5\cgrid0 *=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0   would be the same as x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  x }{\f16\cf5\cgrid0 *}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{
\f16\cf1\cgrid0            }{\f16\cf11\cgrid0 //  * means times
\par }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 /=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0  would be the same as x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  x  }{\f16\cf5\cgrid0 /}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{
\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0            }{\f16\cf11\cgrid0   // / means divided
\par }{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 %=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0  would be the same as x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  x  }{\f16\cf5\cgrid0 %}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{
\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0        }{\f16\cf11\cgrid0 // % means remainder.
\par }{\f16\cf1\cgrid0 
\par }{\f16\cf6\cgrid0 eg:}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par }{\f16\cgrid0 x }{\f16\cf5\cgrid0 %=}{\f16\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cgrid0           }{\f16\cf11\cgrid0 // Would return 0.}{\f16\cgrid0 
\par 
\par Basically that means x was 10, then it was set to remainder of 10 / 10 which equals 0.
\par 
\par Another operator, although you may know what it does by now is the = operator.
\par 
\par x }{\f16\cf5\cgrid0 =}{\f16\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cgrid0      }{\f16\cf11\cgrid0 // That makes x equal to 10.}{\f16\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 Other operators
\par }{\f16\cf1\cgrid0 These operators test for truth, and based on that return true or false.}{\f16\cf6\cgrid0 
\par }{\f16\cgrid0 
\par }{\f16\cf6\cgrid0 && : }{\f16\cf1\cgrid0 And                             }{\f16\cf6\cgrid0 eg.    
\par          }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf6\cgrid0  }{\f16\cf5\cgrid0 &&}{\f16\cf6\cgrid0  }{\f16\cf13\cgrid0 1}{\f16\cf5\cgrid0 )}{\f16\cf6\cgrid0       }{\f16\cf1\cgrid0 returns false.}{\f16\cf6\cgrid0 
\par          }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 1}{\f16\cf6\cgrid0  }{\f16\cf5\cgrid0 &&}{\f16\cf6\cgrid0  }{\f16\cf13\cgrid0 1}{\f16\cf5\cgrid0 )}{\f16\cf6\cgrid0       }{\f16\cf1\cgrid0 returns true.}{\f16\cf6\cgrid0 
\par == : }{\f16\cf1\cgrid0 Equal to                      }{\f16\cf6\cgrid0 eg.
\par          }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 1 == 10}{\f16\cf5\cgrid0 )}{\f16\cf6\cgrid0      }{\f16\cf1\cgrid0 returns false.}{\f16\cf6\cgrid0 
\par          }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 1 == 1}{\f16\cf5\cgrid0 )}{\f16\cf6\cgrid0        }{\f16\cf1\cgrid0 returns true.}{\f16\cf6\cgrid0  
\par || : }{\f16\cf1\cgrid0 Or                                    }{\f16\cf6\cgrid0 
\par          }{\f16\cf1\cgrid0 This returns true if one side }{\b\f16\cf1\cgrid0 or }{\f16\cf1\cgrid0 the other are true. 
\par }{\f16\cf6\cgrid0 != : }{\f16\cf1\cgrid0 Not equal to                }{\f16\cf6\cgrid0 
\par          }{\f16\cf1\cgrid0 This returns true if the }{\b\f16\cf1\cgrid0 right }{\f16\cf1\cgrid0 side is false
\par }{\f16\cf6\cgrid0     eg.}{\f16\cf1\cgrid0 
\par }\pard \nowidctlpar\tx6570\adjustright {\f16\cf1\cgrid0    }{\f16\cf2\cgrid0  var}{\f16\cf1\cgrid0  x }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 1}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf1\cgrid0     }{\f16\cf2\cgrid0 var}{\f16\cf1\cgrid0  y }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 2}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par     }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 x }{\f16\cf5\cgrid0 !=}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0      }{\f16\cf11\cgrid0 // Returns true, as 1 doesn't equal 2. So, this returns true.
\par     }{\f16\cf5\cgrid0 (!}{\f16\cf1\cgrid0 x}{\f16\cf5\cgrid0 )      }{\f16\cf11\cgrid0 /* Means "not x",   so it's asking if x doesn't equal 1, return true. This returns false, as x is 
\par                    of course 1. */
\par }{\f16\cf6\cgrid0 
\par And some more operators...}{\f16\cf1\cgrid0 
\par 
\par }{\f16\cf6\cgrid0 < : }{\f16\cf1\cgrid0 Under                            }{\f16\cf6\cgrid0 eg.}{\f16\cf1\cgrid0               
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 <}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0       returns true.
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 11}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 <}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0     returns false.                  }{\f16\cf6\cgrid0 
\par > : }{\f16\cf1\cgrid0 Over                               }{\f16\cf6\cgrid0 eg.
\par }{\f16\cf1\cgrid0             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 >}{\f16\cf1\cgrid0  0}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0       returns true.
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 9}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 >}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )  }{\f16\cf1\cgrid0     returns false.      }{\f16\cf6\cgrid0 
\par <= : }{\f16\cf1\cgrid0 Under or equal to    }{\f16\cf6\cgrid0 eg.
\par }{\f16\cf1\cgrid0             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 <=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0       returns true.
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 <=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0  returns true.
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 11}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 <=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0     returns false.                      }{\f16\cf6\cgrid0 
\par >= : }{\f16\cf1\cgrid0 Over or equal to       }{\f16\cf6\cgrid0 eg.
\par }{\f16\cf1\cgrid0             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 >=}{\f16\cf1\cgrid0  0}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0       returns true.
\par }{\f16\cf5\cgrid0             (}{\f16\cf13\cgrid0 10}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 >=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0  returns true.
\par             }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 9}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 >=}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 10}{\f16\cf5\cgrid0 )  }{\f16\cf1\cgrid0     returns false. }{\f16\cf6\cgrid0 
\par 
\par }{\f16\cf1\cgrid0 ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Phew, that's over! Let's move to loops now!
\par 
\par There are basically two types of loops:    for loop and while loop.
\par 
\par }{\f16\cf6\cgrid0 While loop:
\par 
\par }{\f16\cf1\cgrid0 The while loop continues performing the action until the condition is false.}{\f16\cf6\cgrid0 
\par 
\par }{\f16\cf1\cgrid0 while }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )
\par \{
\par }{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 // What it does if returned true.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 
\par }{\f16\cf1\cgrid0 There is also a one liner:
\par  
\par }{\f16\cf2\cgrid0 while }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 //what it does if returned true.
\par }{\f16\cf5\cgrid0 
\par }{\f16\cf6\cgrid0 While loop example:
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font }{\f16\cf5\cgrid0 =}{\f16\cf6\cgrid0  }{\f16\cf1\cgrid0 GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf6\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par   }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 a }{\f16\cf5\cgrid0 =}{\f16\cf1\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ;
\par   }{\f16\cf2\cgrid0 var}{\f16\cf5\cgrid0  }{\f16\cf1\cgrid0 y}{\f16\cf5\cgrid0  = }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par   
\par   while}{\f16\cf2\cgrid0  }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 a < 10}{\f16\cf5\cgrid0 )}{\f16\cf11\cgrid0 
\par }{\f16\cf5\cgrid0   \{}{\f16\cf1\cgrid0 
\par     main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  y}{\f16\cf5\cgrid0 ,}{\f16\cf1\cgrid0  a}{\f16\cf5\cgrid0 );
\par     }{\f16\cf1\cgrid0 a}{\f16\cf5\cgrid0  ++;
\par     }{\f16\cf1\cgrid0 y}{\f16\cf5\cgrid0  +=}{\f16\cf13\cgrid0  10}{\f16\cf5\cgrid0 ;}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}
\par   }{\f16\cf1\cgrid0 FlipScreen(); 
\par   GetKey();
\par }{\f16\cf5\cgrid0 \}
\par 
\par }{\f16\cf6\cgrid0 For loop:
\par 
\par }{\f16\cf1\cgrid0 This loop is a little tricky. You define a variable, use a condition and increment the variable.
\par 
\par for }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 variable}{\f16\cf5\cgrid0 ; }{\f16\cf1\cgrid0 condition; increment}{\f16\cf5\cgrid0 )
\par \{
\par }{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 // What it does if returned true.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \}}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0 
\par }{\f16\cf1\cgrid0 There is also a one liner:
\par  
\par for }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 variable}{\f16\cf5\cgrid0 ; }{\f16\cf1\cgrid0 condition; increment}{\f16\cf5\cgrid0 ) }{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 //what it does if returned true.
\par }{\f16\cf5\cgrid0 
\par }{\f16\cf6\cgrid0 For loop example:
\par 
\par }{\f16\cf2\cgrid0 var }{\f16\cf1\cgrid0 main_font }{\f16\cf5\cgrid0 =}{\f16\cf6\cgrid0  }{\f16\cf1\cgrid0 GetSystemFont}{\f16\cf5\cgrid0 ();}{\f16\cf6\cgrid0 
\par 
\par }{\f16\cf2\cgrid0 function}{\f16\cf1\cgrid0  game}{\f16\cf5\cgrid0 ()}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0 \{
\par }{\f16\cf1\cgrid0   }{\f16\cf2\cgrid0 for }{\f16\cf5\cgrid0 (}{\f16\cf2\cgrid0 var}{\f16\cf5\cgrid0  }{\f16\cf1\cgrid0 i}{\f16\cf5\cgrid0  =}{\f16\cf2\cgrid0  }{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ;}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 i}{\f16\cf2\cgrid0  
}{\f16\cf5\cgrid0 <=}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 10}{\f16\cf5\cgrid0 ;}{\f16\cf2\cgrid0  }{\f16\cf1\cgrid0 i}{\f16\cf5\cgrid0 ++)}{\f16\cf2\cgrid0     }{\f16\cf11\cgrid0 // variable i is equal to 0. while i is under or equal to 10 , add one to i.

\par }{\f16\cf5\cgrid0   \{
\par     }{\f16\cf1\cgrid0 main_font}{\f16\cf5\cgrid0 .}{\f16\cf1\cgrid0 drawText }{\f16\cf5\cgrid0 (}{\f16\cf13\cgrid0 0}{\f16\cf5\cgrid0 ,  }{\f16\cf1\cgrid0 i*10}{\f16\cf5\cgrid0 , }{\f16\cf1\cgrid0 i}{\f16\cf5\cgrid0 );  }{\f16\cf11\cgrid0 
// i times 10  (So i doesn't actually }{\b\f16\cf11\cgrid0 equal }{\f16\cf11\cgrid0 i times 10.)
\par }{\f16\cf5\cgrid0   \}
\par   }{\f16\cf1\cgrid0 FlipScreen(); 
\par   GetKey();
\par }{\f16\cf5\cgrid0 \}
\par 
\par }{\f16\cf1\cgrid0 ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Let's do conditionals now, they're important.
\par 
\par }{\f16\cf6\cgrid0 If:}{\f16\cf1\cgrid0 
\par   The if loops is quite easy to understand. It works like this:
\par    }{\f16\cf2\cgrid0 if }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0   }{\f16\cf11\cgrid0 // Example, if (a == b)
\par }{\f16\cf1\cgrid0    }{\f16\cf5\cgrid0 \{}{\f16\cf1\cgrid0 
\par      }{\f16\cf11\cgrid0 // Add what it needs to do.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0    \}}{\f16\cf1\cgrid0 
\par 
\par   There is also an else command, which means if the condition returns false, then something else will happen.
\par 
\par   }{\f16\cf2\cgrid0 if}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )
\par   \{
\par }{\f16\cf1\cgrid0     }{\f16\cf11\cgrid0 // What it does if returned true.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0   else}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \{}{\f16\cf1\cgrid0 
\par     }{\f16\cf11\cgrid0 // What it does if returned false.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}
\par 
\par }{\f16\cf6\cgrid0 Or you can do...}{\f16\cf1\cgrid0 
\par 
\par   }{\f16\cf2\cgrid0 if}{\f16\cf1\cgrid0  }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )
\par   \{
\par }{\f16\cf1\cgrid0     }{\f16\cf11\cgrid0 // What it does if returned true.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}}{\f16\cf1\cgrid0 
\par }{\f16\cf2\cgrid0   else if }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \{}{\f16\cf1\cgrid0 
\par     }{\f16\cf11\cgrid0 // What it does if returned false.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}
\par }{\f16\cf2\cgrid0   else if }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \{}{\f16\cf1\cgrid0 
\par     }{\f16\cf11\cgrid0 // What it does if above returned false.}{\f16\cf1\cgrid0 
\par }{\f16\cf5\cgrid0   \}
\par 
\par }{\f16\cf1\cgrid0 Else ifs can pretty much continue as long as you need.}{\f16\cf5\cgrid0  
\par 
\par }{\f16\cf1\cgrid0 Basically, if the condition is true, it'll perform the action }{\b\f16\cf1\cgrid0 once}{\f16\cf1\cgrid0 
. If it's false it'll either do a different action if there's an "else" command, and continues checking until there isn't any possible reactions.}{\f16\cf5\cgrid0 
\par 
\par }{\f16\cf1\cgrid0 There is also a one liner:
\par  
\par }{\f16\cf2\cgrid0  if }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 //what it does if returned true.
\par }{\f16\cf6\cgrid0  And if you need else...}{\f16\cf1\cgrid0 
\par  }{\f16\cf2\cgrid0 if }{\f16\cf5\cgrid0 (}{\f16\cf1\cgrid0 condition}{\f16\cf5\cgrid0 )}{\f16\cf1\cgrid0  }{\f16\cf11\cgrid0 //what it does if returned true.
\par  }{\f16\cf2\cgrid0 else}{\f16\cf11\cgrid0  // What it does if returned false.}{\f16\cf1\cgrid0  
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf6\lang1033\cgrid0 If example:
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 var}{\f16\cf1\lang1033\cgrid0  main_font }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 a }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 var}{\f16\cf1\lang1033\cgrid0  b }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0 
\par 
\par   }{\f16\cf2\lang1033\cgrid0 if }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 a }{\f16\cf5\lang1033\cgrid0 !=}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0  main_font}{
\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "a doesn't equal 1!"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 else}{\f16\cf1\lang1033\cgrid0  main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{
\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "a does equal 1!"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par 
\par   }{\f16\cf2\lang1033\cgrid0 if }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 b }{\f16\cf5\lang1033\cgrid0 ==}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0    }{
\f16\cf11\lang1033\cgrid0 // If b is equal to 0...
\par }{\f16\cf5\lang1033\cgrid0   \{}{\f16\cf1\lang1033\cgrid0 
\par     main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "b is equal to 0!"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf11\lang1033\cgrid0 
\par     // More lines can be added if it's not a one liner. (Duh)}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0   \}}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0   else}{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 // Else, if it's anything other than 0...}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0   \{}{\f16\cf1\lang1033\cgrid0 
\par     main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "b isn't equal to 0!"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0   \}}{\f16\cf1\lang1033\cgrid0 
\par   
\par   FlipScreen(); 
\par   GetKey();
\par }{\f16\cf5\lang1033\cgrid0 \}
\par 
\par }{\f16\cf6\lang1033\cgrid0 Switches:
\par 
\par }{\f16\cf1\lang1033\cgrid0 A good substitute for "else if" is a switch.
\par 
\par }{\f16\cf2\lang1033\cgrid0 switch }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 condition}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{
\par   }{\f16\cf2\lang1033\cgrid0 case}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 possible answer}{\f16\cf5\lang1033\cgrid0 ):   }{\f16\cf11\lang1033\cgrid0 // if condition equals "possible answer"...}{\f16\cf5\lang1033\cgrid0 
\par   \{
\par     }{\f16\cf11\lang1033\cgrid0 // What it does...}{\f16\cf5\lang1033\cgrid0 
\par     }{\f16\cf2\lang1033\cgrid0 break}{\f16\cf5\lang1033\cgrid0 ;
\par   \}
\par   }{\f16\cf2\lang1033\cgrid0 case}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 another possible answer}{\f16\cf5\lang1033\cgrid0 ):  }{\f16\cf11\lang1033\cgrid0 // if condition equals "another possible answer"...}{\f16\cf5\lang1033\cgrid0 

\par   \{
\par     }{\f16\cf11\lang1033\cgrid0 // What it does...}{\f16\cf5\lang1033\cgrid0 
\par     }{\f16\cf2\lang1033\cgrid0 break}{\f16\cf5\lang1033\cgrid0 ;
\par   \}
\par \}}{\f16\cf1\lang1033\cgrid0 
\par 
\par Now this }{\b\f16\cf1\lang1033\cgrid0 has }{\f16\cf1\lang1033\cgrid0 to have a break after every case, or else it'll continue down the list, even if the condition isn't true.
\par 
\par }{\f16\cf6\lang1033\cgrid0 Switch example:
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_font }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf6\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf6\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{
\par   }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 what }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;
\par }{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 switch }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 what}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0   \{
\par     }{\f16\cf2\lang1033\cgrid0 case}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ):
\par     \{
\par       }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{
\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "What is equal to 0"}{\f16\cf5\lang1033\cgrid0 );
\par       }{\f16\cf2\lang1033\cgrid0 break}{\f16\cf5\lang1033\cgrid0 ;
\par     \}
\par     }{\f16\cf2\lang1033\cgrid0 case}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ):
\par     \{
\par       }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{
\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "What is equal to 1"}{\f16\cf5\lang1033\cgrid0 );
\par       }{\f16\cf2\lang1033\cgrid0 break}{\f16\cf5\lang1033\cgrid0 ;
\par     \}
\par   \}}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf5\lang1033\cgrid0    }{\f16\cf1\lang1033\cgrid0 FlipScreen(); 
\par   GetKey();
\par }{\f16\cf5\lang1033\cgrid0 \}}{\f16\cf1\lang1033\cgrid0 
\par 
\par What could even be a string, like }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 what }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf11\lang1033\cgrid0 "Hello"}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 , then it could have case (}{
\f16\cf11\lang1033\cgrid0 "Hello"}{\f16\cf1\lang1033\cgrid0 )}{\f16\cf5\lang1033\cgrid0 :}{\f16\cf1\lang1033\cgrid0 
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par I know, you're probably dying to dive into map making and making cool things like Battle Systems and Menus and such. But you have to wait. None of these things will work if you don't know how to use the basics! I\rquote 
ll tell you how to do harder things later. For now, let's work with Arrays.
\par 
\par Okay, say you want to store player names, }{\b\f16\cf1\lang1033\cgrid0 without}{\f16\cf1\lang1033\cgrid0  having to make a variable for }{\b\f16\cf1\lang1033\cgrid0 each }{\f16\cf1\lang1033\cgrid0 one.
\par }{\f16\cf6\lang1033\cgrid0 Instead of doing this:
\par }{\f16\cf5\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 var}{\f16\cf5\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 player_1 }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf11\lang1033\cgrid0 "Bob"}{\f16\cf5\lang1033\cgrid0 ;
\par   }{\f16\cf2\lang1033\cgrid0 var}{\f16\cf5\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 player_2 }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf11\lang1033\cgrid0 "Fred"}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf6\lang1033\cgrid0 
\par You could just do this:}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Players }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Array}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0    }{
\f16\cf11\lang1033\cgrid0 // Create a new Array.
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Bob"}{
\f16\cf5\lang1033\cgrid0 ;
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Fred"}{
\f16\cf5\lang1033\cgrid0 ;
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "George"}{
\f16\cf5\lang1033\cgrid0 ;
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 3}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Tim"}{
\f16\cf5\lang1033\cgrid0 ;
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf6\lang1033\cgrid0 Don't want to write the numbers? Sure!}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Players }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Array}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0    }{
\f16\cf11\lang1033\cgrid0 // Create a new Array.
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Bob"}{\f16\cf5\lang1033\cgrid0 );
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Fred"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "George"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Tim"}{\f16\cf5\lang1033\cgrid0 );
\par 
\par }{\f16\cf1\lang1033\cgrid0 Players.push really just means that it adds what's specified in the Brackets }{\f16\cf5\lang1033\cgrid0 ( }{\f16\cf1\lang1033\cgrid0  and  }{\f16\cf5\lang1033\cgrid0 )  }{\f16\cf1\lang1033\cgrid0 
to the front of the end of the array list as a new number.
\par 
\par }{\f16\cf6\lang1033\cgrid0 You can also do it this way:
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 our_array }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Array }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Item 1"}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Item 2"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Item 3"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 
// You can do as many as you want, and you can also use numbers}{\f16\cf1\lang1033\cgrid0 
\par                                            \tab \tab \tab }{\f16\cf11\lang1033\cgrid0 \tab           // Rather than strings.
\par }{\f16\cf1\lang1033\cgrid0 Basically, our_array[0] would be "Item 1", our_array[1] would be "Item 2" and our_array[2] would be "Item 3".
\par 
\par }{\f16\cf6\lang1033\cgrid0 To draw an array, just do this:}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 var}{\f16\cf1\lang1033\cgrid0  main_font }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Players }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Array}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0    }{
\f16\cf11\lang1033\cgrid0 // Create a new Array.
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Bob"}{\f16\cf5\lang1033\cgrid0 );
\par }{\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Fred"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "George"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par Players}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 push}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Tim"}{\f16\cf5\lang1033\cgrid0 );
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 for}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{
\f16\cf5\lang1033\cgrid0  < }{\f16\cf1\lang1033\cgrid0 Players.length}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ++)
\par   \{
\par     }{\f16\cf1\lang1033\cgrid0 main_font.drawText}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 *}{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ])
\par   \}
\par }{\f16\cf1\lang1033\cgrid0 
\par   FlipScreen}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par   GetKey}{\f16\cf5\lang1033\cgrid0 ();  }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 Woah! What's Players.length?? That's just how many "Players" there is: }{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  (Bob) , }{\f16\cf5\lang1033\cgrid0 [}{
\f16\cf1\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  (Fred), }{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  (George) and }{\f16\cf5\lang1033\cgrid0 [}{
\f16\cf1\lang1033\cgrid0 3}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  (Tim).
\par I suppose this is a good time to say that an Array }{\b\f16\cf1\lang1033\cgrid0 always }{\f16\cf1\lang1033\cgrid0 starts from 0. 
\par 
\par }{\f16\cf6\lang1033\cgrid0 Now, what does:}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 for}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{
\f16\cf5\lang1033\cgrid0  < }{\f16\cf1\lang1033\cgrid0 Players.length}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ++)
\par   \{
\par     }{\f16\cf1\lang1033\cgrid0 main_font.drawText}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 *}{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf1\lang1033\cgrid0 Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ])
\par   \}
\par }{\f16\cf6\lang1033\cgrid0 mean?}{\f16\cf1\lang1033\cgrid0 
\par 
\par Simple. It just continues adding one to i until it reaches the players length, which is in this case is 3. Then it'll draw Player}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ]  }{\f16\cf1\lang1033\cgrid0 
(i being the current number). So it'll start at Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0 ...Players}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 1}{
\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  and so on until it goes through them all.
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf1\lang1033\cgrid0 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Phew. We made it through the basics! Well I hope }{\b\f16\cf1\lang1033\cgrid0 you }{\f16\cf1\lang1033\cgrid0 
did. If you didn't you may find everything else hard. Anyway, let's make things happen. Oh and by the way, don't expect to make that perfect game you've been dreaming up in two days. It takes a lot of practice and knowledge of sphere and javascr
ipt to get you that far! I can't even do it yet ;_; But I\rquote m in the middle of one, so hey, not too bad, eh? Let's make a map and do stuff!! Wooo!
\par 
\par Well, before we start you need to have a map and a spriteset ready. Now I\rquote m not going to give you one because 
the maps too big for this kind of tutorial (trying to keep it small in size) so just scout around other games and see what you can use, or if you want, play around with "import" under file.
\par 
\par Just make sure your spriteset is in the \ldblquote spritesets\rdblquote  folder, and your map is in the map folder.
\par 
\par Okay, make our map work shall we? How? Like this:
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par     CreatePerson}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "guy.rss"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  false}{
\f16\cf5\lang1033\cgrid0 );     }{\f16\cf11\lang1033\cgrid0 // The false part just means that the player wont be destroyed after every time}{\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0     AttachCamera }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0                      }{\f16\cf11\lang1033\cgrid0 // the map's changed.}{
\f16\cf1\lang1033\cgrid0 
\par     AttachInput }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     SetTalkActivationKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ENTER}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf11\lang1033\cgrid0      // When you talk to a person, you have to press enter!}{\f16\cf1\lang1033\cgrid0 
\par     MapEngine }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Map.rmp"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 80}{\f16\cf5\lang1033\cgrid0 );               }{\f16\cf11\lang1033\cgrid0 
// Starts up your map.}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 
Just change the above how you like. If you want to change the main player's name from "Player" (Though this really has nothing to do with the actually hero, it's just what you call if you want the spriteset you're controlling to 
do something, like move in a scene for instance. Guy.rss should be changed to your spriteset's name, and Map.rmp should be changed to the name of your map.
\par 
\par From here you can probably walk around like an idiot! Woohoo! 
\par 
\par Okay, let's make a player that you can talk to. Open up the map, right-click where you want to put this person and then Insert Entity | Person...
\par Okay, now, type in a name for this person... let's call him Bob.        }{\f16\cf6\lang1033\cgrid0 (}{\b\f16\cf6\lang1033\cgrid0 Don't}{\f16\cf6\lang1033\cgrid0  put "" on either side of Bob's name)          }{\f16\cf1\lang1033\cgrid0 Now click the little
 box with "..." in it and find your spriteset. Once found, press okay. Now, click okay again, then close the map after saving it.
\par Now we need to make a text box function.
\par 
\par Okay, go to your main script }{\f16\cf6\lang1033\cgrid0 (In my case, game.js) }{\f16\cf1\lang1033\cgrid0 Make sure you keep the above game function there. Underneath it, make a }{\b\f16\cf1\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  function, like so:

\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_font }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf6\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_window }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf6\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 GetSystemWindowStyle}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par     CreatePerson}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "guy.rss"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  false}{
\f16\cf5\lang1033\cgrid0 );  
\par }{\f16\cf1\lang1033\cgrid0     AttachCamera }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     AttachInput }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     SetTalkActivationKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ENTER}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     MapEngine }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Map.rmp"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 80}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \}}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  Text_Box }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 txt}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par   main_window.drawTextBox}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 20}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 22}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0 GetScreenWidth}{
\f16\cf5\lang1033\cgrid0 ()-}{\f16\cf13\lang1033\cgrid0 34}{\f16\cf1\lang1033\cgrid0 ,GetScreenHeight}{\f16\cf5\lang1033\cgrid0 ()-}{\f16\cf13\lang1033\cgrid0 202}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{
\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  txt}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0     
\par   }{\f16\cf1\lang1033\cgrid0 main_font.drawWindow}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 16}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 16}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0 
GetScreenWidth}{\f16\cf5\lang1033\cgrid0 ()-}{\f16\cf13\lang1033\cgrid0 32}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0 GetScreenHeight}{\f16\cf5\lang1033\cgrid0 ()-}{\f16\cf13\lang1033\cgrid0 192}{\f16\cf5\lang1033\cgrid0 );}{
\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0   FlipScreen}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0   
\par   RenderMap}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par   }{\f16\cf2\lang1033\cgrid0 while}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 GetKey}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 !=}{\f16\cf1\lang1033\cgrid0  KEY_ENTER}{
\f16\cf5\lang1033\cgrid0 );    }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 Some new stuff! Okay, I\rquote ll explain them.
\par }{\f16\cf6\lang1033\cgrid0 GetSystemWindowStyle() : }{\f16\cf1\lang1033\cgrid0 Well, this gets the system's window style. If you like, you can use LoadWindowStyle }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "name.rws"}{
\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par name.rws being the name of your window style.}{\f16\cf5\lang1033\cgrid0 
\par 
\par }{\f16\cf6\lang1033\cgrid0 RenderMap() : }{\f16\cf1\lang1033\cgrid0 Alright, this'll make the map show while the text box is on, as FlipScreen}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
 pretty much just makes the whole thing black. Try taking out RenderMap}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0  and see what happens.
\par 
\par }{\f16\cf6\lang1033\cgrid0 while (GetKey() != KEY_ENTER) : }{\f16\cf1\lang1033\cgrid0 This means wait until a key is pressed, if it\rquote s enter stop, else wait for another key to be pressed, repeatedly until it\rquote s enter.
\par 
\par }{\f16\cf6\lang1033\cgrid0 .drawWindow (x, y, width, height) : }{\f16\cf1\lang1033\cgrid0 Basically makes a box at x, y, with the size of width and height. GetScreenWidth() and GetScreenHeight() basically 
just return the size of the game screen. So, if we minus something it'll shrink.
\par 
\par }{\f16\cf6\lang1033\cgrid0 .drawTextBox (x, y, width, height, offset, text) : }{\f16\cf1\lang1033\cgrid0 Makes a text box, so that it continues until it hits the side of the box with writing, then it'll go down to the next line,
 so that it doesn't go off the screen.
\par 
\par Hope that made sense. Okay, save that, and go back to the map. Right click on the player and click edit entity. Now, goto "On Activate Talk" in the little selection bar. Underneath that, type Text_Box ("Hello world!"
); Now click okay. Save the map and run the game. Now all you have to do is walk up to the guy, talk to him (usually enter or space bar) and he'll say }{\f16\cf11\lang1033\cgrid0 "Hello world"}{\f16\cf1\lang1033\cgrid0 . Simple.}{\f16\cf5\lang1033\cgrid0 

\par 
\par }{\f16\cf1\lang1033\cgrid0 ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Let's add a menu!
\par 
\par Okay, before we start I\rquote ll get you acquainted with EvaluateSystemScript() and EvaluateScript(). Well basically, if you had a game with just one -huge- script files there'd be utter chaos.
 Trying to find a certain piece of code would take ages. That's why we split them up, and call them. EvaluateSystemScript () Calls a certain script from the System folder of sphere. Use it like: EvaluateSystemScript }{\f16\cf5\lang1033\cgrid0 (}{
\f16\cf11\lang1033\cgrid0 "menu.js"}{\f16\cf5\lang1033\cgrid0 );
\par }{\f16\cf1\lang1033\cgrid0 To call a script that's -in- your game, use EvaluateScript }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "name.js"}{\f16\cf5\lang1033\cgrid0 );
\par 
\par }{\f16\cf1\lang1033\cgrid0 Okay, let's make a menu! Add this in to your game:
\par 
\par EvaluateSystemScript }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "menu.js"}{\f16\cf5\lang1033\cgrid0 );  }{\b\f16\cf5\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 // }{\b\f16\cf11\lang1033\cgrid0 This has to be called to use a menu!!!}{
\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  Game_Menu}{\f16\cf5\lang1033\cgrid0 ()
\par \{ }{\f16\cf1\lang1033\cgrid0  
\par   RenderMap}{\f16\cf5\lang1033\cgrid0 ();
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0   var }{\f16\cf1\lang1033\cgrid0 menu }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Menu}{\f16\cf5\lang1033\cgrid0 ();
\par }{\f16\cf1\lang1033\cgrid0   menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Items"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  Items_Menu}{\f16\cf5\lang1033\cgrid0 );}
{\f16\cf1\lang1033\cgrid0  
\par   menu.execute }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 40}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 110}{
\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 64}{\f16\cf5\lang1033\cgrid0 );     }{\f16\cf11\lang1033\cgrid0 // x, y, width, height}{\f16\cf5\lang1033\cgrid0 
\par \}}{\f16\cf1\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  Items_Menu}{\f16\cf5\lang1033\cgrid0 ()
\par \{
\par   }{\f16\cf11\lang1033\cgrid0 // This is empty!}{\f16\cf5\lang1033\cgrid0 
\par \}
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  t}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 \{ \} }{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 
// This does nothing, it's just so you can put something in the menu item so it makes more sense.
\par 
\par }{\f16\cf1\lang1033\cgrid0 Woah! menu.addItem? menu is now defined, and anything with menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem will add onto that list (as long as it's in the function, remember }{\f16\cf2\lang1033\cgrid0 var}{
\f16\cf1\lang1033\cgrid0  menu }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Menu}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0  }{\b\f16\cf1\lang1033\cgrid0 isn't }{
\f16\cf1\lang1033\cgrid0 a global. Execute makes a box for all the menu items to go into.
\par 
\par Okay, so how do we get this to open when we press a key? Simple. BindKey(). Go up to the game function, and }{\f16\cf6\lang1033\cgrid0 change}{\f16\cf1\lang1033\cgrid0 ...
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par     CreatePerson}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "guy.rss"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  false}{
\f16\cf5\lang1033\cgrid0 );  
\par }{\f16\cf1\lang1033\cgrid0     AttachCamera }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     AttachInput }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     SetTalkActivationKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ENTER}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     MapEngine }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Map.rmp"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 80}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0 \}
\par 
\par }{\f16\cf6\lang1033\cgrid0 to this...
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{
\par     }{\f16\cf1\lang1033\cgrid0 BindKey}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 KEY_ESCAPE}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf11\lang1033\cgrid0  'Game_Menu()'}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf11\lang1033\cgrid0 't()'}{
\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     CreatePerson}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "guy.rss"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  false}{
\f16\cf5\lang1033\cgrid0 );  
\par }{\f16\cf1\lang1033\cgrid0     AttachCamera }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     AttachInput }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     SetTalkActivationKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ENTER}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     MapEngine }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Map.rmp"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 80}{\f16\cf5\lang1033\cgrid0 );
\par     }{\f16\cf1\lang1033\cgrid0 UnbindKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ESCAPE}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0 \}
\par }{\f16\cf1\lang1033\cgrid0 
\par How does bind key work? Well basically you have the open key.... KEY ESCAPE, what it ope
ns... our Game_Menu() and when you press escape again what does it do? t(), which does nothing. So it just closes. Okay, save and try that. Usually pressing escape quits the game, but not anymore! How do you quit now? Well until you make an Exit (just do 
menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Exit"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  Exit}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
 ) item in the menu, just press Alt + F4. Even with the exit item, Alt + F4 is faster.
\par 
\par ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Phew, hope
 I haven't confused you so far? Well, now that we've figure out how to make a menu...how about we'll make some items for it, hey? Just to make sure, before you can rush into a game you have to make every little bit in it, items..equipment...etc...sphere i
s much more complex than RPG Maker 2k, if you use that and will require a lot more work. It'll need teams of people and months of work (Well, depends what your making) and if your by yourself, you'll need a lot more time }{\f16\cf6\lang1033\cgrid0 ;)}{
\f16\cf1\lang1033\cgrid0  Duh. Anyway, I suppose you should learn about Objects first!
\par 
\par I must admit, I really have no idea how to explain them, because hey, I\rquote m quite new to sphere myself...well sorta. I know enough to use it. :) How about I\rquote ll give you an example?
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf1\lang1033\cgrid0 .name }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf1\lang1033\cgrid0 .amount }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \}}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 So what does this mean? Well first you're making an object, called }{\f16\cf11\lang1033\cgrid0 "Item"}{\f16\cf1\lang1033\cgrid0 
. Secondly, Item has two parameters, name and amount. Thirdly, the name and amount property are direct links to the function parameter. That'll mean }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name }{
\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 the name you give it}{\f16\cf1\lang1033\cgrid0 . Eg, }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 
"Potion"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0  which would mean }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 
name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Potion"}{\f16\cf1\lang1033\cgrid0  and }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf1\lang1033\cgrid0 . To call "this" outside of the function, you'd have to have an Object name. You could do this: 
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 potion }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Potion"}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf13\lang1033\cgrid0 10}{\f16\cf1\lang1033\cgrid0 );
\par 
\par }{\f16\cf6\lang1033\cgrid0 And to call }{\f16\cf11\lang1033\cgrid0 "Potion"}{\f16\cf1\lang1033\cgrid0  }{\f16\cf6\lang1033\cgrid0 or }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf1\lang1033\cgrid0  }{\f16\cf6\lang1033\cgrid0 you'd do this:}{
\f16\cf1\lang1033\cgrid0 
\par 
\par potion}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name  or  potion}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 amount
\par 
\par }{\f16\cf6\lang1033\cgrid0 And to draw it to the screen you would do this:
\par }{\f16\cf1\lang1033\cgrid0 
\par main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  potion.name}{\f16\cf5\lang1033\cgrid0 );
\par 
\par }{\f16\cf1\lang1033\cgrid0 There are other ways other than }{\f16\cf11\lang1033\cgrid0 "var potion" }{\f16\cf1\lang1033\cgrid0 for the Object name, but before showing you that, just incase you don't understand and want a working Item Object, I\rquote 
ll write it out for you all together, just so you can look it over and try to understand it:
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_font }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 )
\par \{
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  name}{\f16\cf5\lang1033\cgrid0 ;
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 ;
\par \}
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Potion }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Potion"}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 );
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 game}{\f16\cf5\lang1033\cgrid0 ()
\par \{
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf13\lang1033\cgrid0  0}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "Name: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Potion}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 );   }{\f16\cf11\lang1033\cgrid0 // Would come out as "Name: Potion" 

\par }{\f16\cf5\lang1033\cgrid0   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 10}{
\f16\cf5\lang1033\cgrid0 , }{\f16\cf11\lang1033\cgrid0 "Amount: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Potion.amount}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf11\lang1033\cgrid0     // Would come out as "Amount: 10"}{
\f16\cf5\lang1033\cgrid0 
\par   }{\f16\cf1\lang1033\cgrid0 FlipScreen}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf1\lang1033\cgrid0 GetKey}{\f16\cf5\lang1033\cgrid0 (); 
\par \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par Well, now I\rquote ll show you how -I'd- make the items. Rather than making a variable for -each- item, i'd put it in an Array. This way, you can list them using the numbers in the square brackets [  and  ]. Okay, first off, let's call the array.
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Items }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Array}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf6\lang1033\cgrid0 Now, let's add in our Item function:}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 ()  }{\f16\cf11\lang1033\cgrid0  // This should be blank, rather than this.name = name.}{\f16\cf5\lang1033\cgrid0 
\par \{
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  ""}{\f16\cf5\lang1033\cgrid0 ;    }{\f16\cf11\lang1033\cgrid0 
// See how I made these blank? That's so I can set them inside our array, rather than list them on one line.
\par }{\f16\cf5\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;  
\par \}
\par 
\par }{\f16\cf6\lang1033\cgrid0 Okay, now let's make the first part of our array...number }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf6\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 
\par 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  () }{\f16\cf1\lang1033\cgrid0   }{
\f16\cf11\lang1033\cgrid0  // }{\b\f16\cf11\lang1033\cgrid0 First, let's declare the first Item in our array a new Item.}{\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Potion"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 // Next, let's make the empty "this.name" become "Potion".}{\f16\cf1\lang1033\cgrid0 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0    }{\f16\cf11\lang1033\cgrid0 // And now for the empty amount...
\par 
\par }{\f16\cf6\lang1033\cgrid0 See how this is working? Basically it's making a new "this.name" for each variable..array or whatever you want to call it. This basically means you can make many more items, with the same function. Let's make some more items!}{
\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  () }{\f16\cf1\lang1033\cgrid0   }{
\f16\cf11\lang1033\cgrid0  // Second in the array..
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Ether"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  
\par 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  () }{\f16\cf1\lang1033\cgrid0   }{
\f16\cf11\lang1033\cgrid0  // Third in the array..
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "High Potion"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  
\par 
\par This means you can call the names like this main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf13\lang1033\cgrid0  0}{
\f16\cf5\lang1033\cgrid0 , }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 );  }{\f16\cf1\lang1033\cgrid0 
or if you want to change them after you've created them (Why you would want to change the name of an item is beyond me...so let's just change the amount, because it'll have to increase and decrease as you buy and sell items in your game):
\par 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 ++;}{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 
// This'll make Items[0].amount increase by one!
\par 
\par }{\f16\cf1\lang1033\cgrid0 Okay...now...let's make this into a menu, so that it will list all the items. I\rquote m not sure if I\rquote ll get a fully wor
king items menu in this tutorial...we'll see how I feel. Let's just make it say "Item used" without doing anything else other than that when you press it, okay?
\par Let's make this open up on your map, because it looks better there. Make sure you have a map ready. I\rquote ll call my map just "Map.rmp".
\par 
\par EvaluateSystemScript }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "menu.js"}{\f16\cf5\lang1033\cgrid0 );
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_font }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Item }{\f16\cf5\lang1033\cgrid0 ()  }{\f16\cf11\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 
\par \{
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  ""}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;  
\par \}
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Items }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Array}{\f16\cf5\lang1033\cgrid0 ();
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  ()}{
\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Potion"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ;
\par 
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  ()}{
\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "Ether"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  
\par 
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ]}{\f16\cf1\lang1033\cgrid0  = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Item}{\f16\cf5\lang1033\cgrid0  ()}{\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "High Potion"}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  
\par }{\f16\cf5\lang1033\cgrid0 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  game}{\f16\cf5\lang1033\cgrid0 ()}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{
\par     }{\f16\cf1\lang1033\cgrid0 BindKey}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf1\lang1033\cgrid0 KEY_ESCAPE}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf11\lang1033\cgrid0  'Game_Menu()'}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf11\lang1033\cgrid0 't()'}{
\f16\cf5\lang1033\cgrid0 );             }{\f16\cf11\lang1033\cgrid0  // If you want to try it out without a map, just remove everything
\par }{\f16\cf1\lang1033\cgrid0     CreatePerson}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "guy.rss"}{\f16\cf5\lang1033\cgrid0 ,}{
\f16\cf1\lang1033\cgrid0  false}{\f16\cf5\lang1033\cgrid0 );                        }{\f16\cf11\lang1033\cgrid0 // inside this function, and }{\b\f16\cf11\lang1033\cgrid0 replace }{\f16\cf11\lang1033\cgrid0 it with Game_Menu();}{\f16\cf5\lang1033\cgrid0 

\par }{\f16\cf1\lang1033\cgrid0     AttachCamera }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     AttachInput }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Player"}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     SetTalkActivationKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ENTER}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par     MapEngine }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Map.rmp"}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 80}{\f16\cf5\lang1033\cgrid0 );
\par     }{\f16\cf1\lang1033\cgrid0 UnbindKey }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 KEY_ESCAPE}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0 \}
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  Game_Menu}{\f16\cf5\lang1033\cgrid0 ()
\par \{ }{\f16\cf1\lang1033\cgrid0  
\par   RenderMap}{\f16\cf5\lang1033\cgrid0 ();}{\f16\cf11\lang1033\cgrid0                                                                                // Make sure to }{\b\f16\cf11\lang1033\cgrid0 remove }{\f16\cf11\lang1033\cgrid0 this if you're not
 using a map.}{\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0   var }{\f16\cf1\lang1033\cgrid0 menu }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Menu}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf2\lang1033\cgrid0 for }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{
\f16\cf5\lang1033\cgrid0  < }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 length}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ++)
\par   \{
\par     }{\f16\cf2\lang1033\cgrid0 if }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0  > }{
\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 )
\par     \{
\par }{\f16\cf1\lang1033\cgrid0       menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{
\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 +}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 ": "}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 +}{\f16\cf1\lang1033\cgrid0  Items}{\f16\cf5\lang1033\cgrid0 [}{
\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  useItem}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0     \}
\par   \}
\par   }{\f16\cf1\lang1033\cgrid0 menu.execute }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 40}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{
\f16\cf13\lang1033\cgrid0 110}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 64}{\f16\cf5\lang1033\cgrid0 ); 
\par \}
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  useItem}{\f16\cf5\lang1033\cgrid0 ()
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0 \{
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText}{\f16\cf5\lang1033\cgrid0  (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "Item used"}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 FlipScreen}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf1\lang1033\cgrid0 GetKey}{\f16\cf5\lang1033\cgrid0 (); 
\par \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 Woah...what does:
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 for }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf13\lang1033\cgrid0 0}{
\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  < }{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 length}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{
\f16\cf5\lang1033\cgrid0 ++)
\par   \{
\par     }{\f16\cf2\lang1033\cgrid0 if }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0  > }{
\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 )
\par     \{
\par }{\f16\cf1\lang1033\cgrid0       menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Items}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{
\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 +}{\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 ": "}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 +}{\f16\cf1\lang1033\cgrid0  Items}{\f16\cf5\lang1033\cgrid0 [}{
\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 amount}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  useItem}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0     \}
\par   \}
\par 
\par }{\f16\cf1\lang1033\cgrid0 
mean? Basically, it'll go through the length of Items (Items[0], Items[1], Items[2]....that's 3 items!) and then it'll check if the current item's amount is over 0 before adding it. If it does equal to 0, it won't show up in the menu, but if it does it'
ll show up with the name and amount of the item, and useItem will show }{\f16\cf11\lang1033\cgrid0 "Item used"}{\f16\cf1\lang1033\cgrid0 . Try changing one of the amount for one of the items. Go on. It won't be there anymore if it's a 0!}{
\f16\cf5\lang1033\cgrid0 
\par 
\par }{\f16\cf1\lang1033\cgrid0 ---------------------------------------------------------------------------------------------------------------------------------
\par 
\par I know.. let's make a stat's menu. This is easier to do, and I can make this work without too much coding. I'll actualy make this one work. }{\f16\cf6\lang1033\cgrid0 :D }{\f16\cf1\lang1033\cgrid0 First of, let's make an object, shall we?
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Stats }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  hp}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  mp}{
\f16\cf5\lang1033\cgrid0 )}{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf5\lang1033\cgrid0 \{}{\f16\cf1\lang1033\cgrid0 
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 name }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0    }{\f16\cf11\lang1033\cgrid0 
 // The name of your player 
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 hp }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 hp}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0     }{
\f16\cf11\lang1033\cgrid0  // The health points
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 maxhp }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 hp}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  }{
\f16\cf11\lang1033\cgrid0  // The }{\b\f16\cf11\lang1033\cgrid0 max}{\f16\cf11\lang1033\cgrid0  health points (eg, 10 out of 50 hp. The 50 would be the max, and hp above would be current.
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 mp}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf1\lang1033\cgrid0 mp}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0   }{
\f16\cf11\lang1033\cgrid0 // Ditto for the above, except magic points
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 maxmp }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  mp;  
\par   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 atk }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;  }{\f16\cf11\lang1033\cgrid0 // The player's attack 
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 def }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;  }{\f16\cf11\lang1033\cgrid0 
// The player's defence
\par }{\f16\cf1\lang1033\cgrid0   }{\f16\cf2\lang1033\cgrid0 this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 level }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ;  }{\f16\cf11\lang1033\cgrid0 
// The players current level
\par }{\f16\cf2\lang1033\cgrid0   this}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 alive }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf1\lang1033\cgrid0 true}{\f16\cf5\lang1033\cgrid0 ;  }{\f16\cf11\lang1033\cgrid0 // Is the player alive or not?
\par }{\f16\cf5\lang1033\cgrid0 \}}{\f16\cf1\lang1033\cgrid0 
\par 
\par }{\f16\cf6\lang1033\cgrid0 By the way, when I have this.maxhp = hp, it }{\b\f16\cf6\lang1033\cgrid0 doesn't }{\f16\cf6\lang1033\cgrid0 
mean that it'll always be the same as hp all the time. It just sets it to the max at the start. So, basically it'll start off as 10 out of 10 hp, and if you minus PlayerObject.hp, it'd minus only the current hp, but max would be the same. (5/10 for exampl
e)}{\f16\cf1\lang1033\cgrid0 
\par Okay, this'll make our object. This is basically a mix of the two types we can make, one liner and seperate lines:
\par 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf2\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf2\lang1033\cgrid0  }{\f16\cf1\lang1033\cgrid0 GetSystemFont}{\f16\cf5\lang1033\cgrid0 ();  }{\f16\cf11\lang1033\cgrid0 
// Load the font
\par }{\f16\cf1\lang1033\cgrid0 EvaluateSystemScript }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "menu.js"}{\f16\cf5\lang1033\cgrid0 );  }{\f16\cf11\lang1033\cgrid0 // For our menu
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 Members }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Array}{\f16\cf5\lang1033\cgrid0 ();
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ] =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Stats}{\f16\cf5\lang1033\cgrid0  (}{
\f16\cf11\lang1033\cgrid0 "Bob",}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0           }{
\f16\cf11\lang1033\cgrid0 // Name is bob, hp is 10 and mp is 0.
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 atk }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0   }{\f16\cf11\lang1033\cgrid0 // Sets player 0's attack to 5.}{\f16\cf1\lang1033\cgrid0 
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 def }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 3}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0   }{
\f16\cf11\lang1033\cgrid0 // Sets player 0's defence to 3. }{\f16\cf1\lang1033\cgrid0 
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 level }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0  // Sets player 0's level to 1.
\par 
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ] =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Stats}{\f16\cf5\lang1033\cgrid0  (}{
\f16\cf11\lang1033\cgrid0 "Fred",}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0           }{
\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 atk }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 2}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0   
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 def }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 9}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 level }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf11\lang1033\cgrid0 
\par 
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ] =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Stats}{\f16\cf5\lang1033\cgrid0  (}{
\f16\cf11\lang1033\cgrid0 "George",}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 5}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 );}{\f16\cf11\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 atk }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 6}{
\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0   
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 def }{\f16\cf5\lang1033\cgrid0 = }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ;}{\f16\cf1\lang1033\cgrid0  
\par Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf13\lang1033\cgrid0 2}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 level }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 1}{\f16\cf5\lang1033\cgrid0 ;}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 
\par 
\par }{\f16\cf6\lang1033\cgrid0 Let's make a stats function!
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 Show_Stats }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 )
\par \{
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf13\lang1033\cgrid0  0}{\f16\cf5\lang1033\cgrid0 ,   }{
\f16\cf11\lang1033\cgrid0 "Name: " }{\f16\cf5\lang1033\cgrid0 + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "HP: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 hp }{\f16\cf5\lang1033\cgrid0 + }{
\f16\cf11\lang1033\cgrid0 " / " }{\f16\cf5\lang1033\cgrid0 + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 maxhp}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 20}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "MP: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 mp }{\f16\cf5\lang1033\cgrid0 +}{
\f16\cf11\lang1033\cgrid0  " / " }{\f16\cf5\lang1033\cgrid0 + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 maxmp}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 30}{\f16\cf5\lang1033\cgrid0 ,  }{
\f16\cf11\lang1033\cgrid0 "Atk: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 atk}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 , }{\f16\cf13\lang1033\cgrid0 40}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "Def: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 def}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 main_font}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 drawText }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf13\lang1033\cgrid0  50}{\f16\cf5\lang1033\cgrid0 , }{
\f16\cf11\lang1033\cgrid0 "Level: "}{\f16\cf5\lang1033\cgrid0  + }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 who}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 level}{\f16\cf5\lang1033\cgrid0 );
\par   }{\f16\cf1\lang1033\cgrid0 FlipScreen}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf1\lang1033\cgrid0 GetKey}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf1\lang1033\cgrid0 Stats_Menu}{\f16\cf5\lang1033\cgrid0 (); }{\f16\cf11\lang1033\cgrid0 // Go back to the stats menu after you've looked at the player.}{\f16\cf5\lang1033\cgrid0 
\par \}}{\f16\cf6\lang1033\cgrid0 
\par 
\par Now for the status menu!}{\f16\cf5\lang1033\cgrid0 
\par 
\par }\pard \nowidctlpar\brdrb\brdrs\brdrw20\brsp20 \adjustright {\f16\cf2\lang1033\cgrid0 function}{\f16\cf1\lang1033\cgrid0  Stats_Menu}{\f16\cf5\lang1033\cgrid0 ()
\par \{ }{\f16\cf1\lang1033\cgrid0  
\par   RenderMap}{\f16\cf5\lang1033\cgrid0 (); }{\f16\cf11\lang1033\cgrid0  // Make sure to }{\b\f16\cf11\lang1033\cgrid0 remove }{\f16\cf11\lang1033\cgrid0 this if you're not using a map.}{\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf1\lang1033\cgrid0 
\par }{\f16\cf2\lang1033\cgrid0   var }{\f16\cf1\lang1033\cgrid0 menu }{\f16\cf5\lang1033\cgrid0 =}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new}{\f16\cf1\lang1033\cgrid0  Menu}{\f16\cf5\lang1033\cgrid0 ();
\par   }{\f16\cf2\lang1033\cgrid0 for }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf2\lang1033\cgrid0 var }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0  = }{\f16\cf13\lang1033\cgrid0 0}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{
\f16\cf5\lang1033\cgrid0  < }{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 length}{\f16\cf5\lang1033\cgrid0 ; }{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ++)
\par   \{
\par     }{\f16\cf2\lang1033\cgrid0 if }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{\f16\cf1\lang1033\cgrid0 alive}{\f16\cf5\lang1033\cgrid0  == }{
\f16\cf1\lang1033\cgrid0 true}{\f16\cf5\lang1033\cgrid0 )  }{\f16\cf11\lang1033\cgrid0 // Checks if the player is alive or not.}{\f16\cf5\lang1033\cgrid0 
\par     \{
\par }{\f16\cf1\lang1033\cgrid0       menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 addItem }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf1\lang1033\cgrid0 Members}{\f16\cf5\lang1033\cgrid0 [}{\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 ].}{
\f16\cf1\lang1033\cgrid0 name}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Function}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 "Show_Stats("}{\f16\cf5\lang1033\cgrid0 +}{
\f16\cf1\lang1033\cgrid0 i}{\f16\cf5\lang1033\cgrid0 +}{\f16\cf11\lang1033\cgrid0 ");"}{\f16\cf1\lang1033\cgrid0 ) }{\f16\cf5\lang1033\cgrid0 );}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 
\par }\pard \nowidctlpar\adjustright {\f16\cf5\lang1033\cgrid0     \}
\par   \}
\par   }{\f16\cf1\lang1033\cgrid0 menu}{\f16\cf5\lang1033\cgrid0 .}{\f16\cf1\lang1033\cgrid0 execute }{\f16\cf5\lang1033\cgrid0 (}{\f16\cf13\lang1033\cgrid0 10}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 40}{
\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 110}{\f16\cf5\lang1033\cgrid0 ,}{\f16\cf1\lang1033\cgrid0  }{\f16\cf13\lang1033\cgrid0 64}{\f16\cf5\lang1033\cgrid0 ); 
\par \}}{\f16\cf6\lang1033\cgrid0 
\par 
\par }{\f16\cf1\lang1033\cgrid0 So what's "new Function ("");"  ? Well, it's another hard one to explain, I don't know it to well, but that's the only way I know how to make the menu open up "i" from the for loop. You could do new function() \{
  ShowStats (i);  \}  But that doesn't like to work for some reason... I suppose i'll just tell you it's the same thing, except what you write is in the "" of the Function, and to add the "i" you -have- to have the "+i+" bit.  So it's like this:    }{
\f16\cf2\lang1033\cgrid0 new }{\f16\cf1\lang1033\cgrid0 Function}{\f16\cf5\lang1033\cgrid0 (}{\f16\cf11\lang1033\cgrid0 " ShowStats ("}{\f16\cf1\lang1033\cgrid0  }{\f16\cf5\lang1033\cgrid0 +}{\f16\cf1\lang1033\cgrid0  i }{\f16\cf5\lang1033\cgrid0 +}{
\f16\cf1\lang1033\cgrid0  }{\f16\cf11\lang1033\cgrid0 "); "}{\f16\cf5\lang1033\cgrid0 );  
\par 
\par }{\f16\cf1\lang1033\cgrid0 What that does is Show the stats of the current member it's up to. So if Member[0] is created, and you press Member[0] it has to open ShowStats(0); Which then in turn would open what it needs for that player.}{
\f16\cf5\lang1033\cgrid0 
\par }{\f16\cf6\lang1033\cgrid0 
\par Now, let's run it!
\par 
\par }{\f16\cf2\lang1033\cgrid0 function }{\f16\cf1\lang1033\cgrid0 game}{\f16\cf5\lang1033\cgrid0 ()
\par \{
\par   }{\f16\cf1\lang1033\cgrid0 Stats_Menu}{\f16\cf5\lang1033\cgrid0 ();
\par \}}{\f16\cf6\lang1033\cgrid0 
\par 
\par -- http://a-extreme.homeip.net/downloads/ to get an updated version, just download this again.}{\f16\lang1033\cgrid0 
\par }}